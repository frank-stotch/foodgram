name: Deploy

on:
  workflow_run:
    workflows:
      - Backend tests
      - Build backend image
      - Build frontend image
      - Build gateway image
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Make .env file via create-envfile by SpicyPizza
        uses: SpicyPizza/create-envfile@v2.0.3
        with:
          envkey_DEBUG: ${{ vars.DEBUG }}
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          envkey_ALLOWED_HOSTS: ${{ vars.ALLOWED_HOSTS }}
          envkey_LANGUAGE_CODE: ${{ vars.LANGUAGE_CODE }}
          envkey_TIMEZONE: ${{ vars.TIME_ZONE }}
          envkey_USE_SQLITE: ${{ vars.USE_SQLITE }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_POSTGRES_DB_HOST: ${{ secrets.POSTGRES_DB_HOST }}
          envkey_POSTGRES_DB_PORT: ${{ secrets.POSTGRES_DB_PORT }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          fail_on_empty: true
          sort_keys: false
      - name: Copy .env via ssh's scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: ".env"
          target: "${{ vars.PROJECT_NAME }}"
      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.production.yml"
          target: "${{ vars.PROJECT_NAME }}"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ${{ vars.PROJECT_NAME }}
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
            sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /backend_static/static/
      - name: Send message if build and push for gateway failed
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          disable_web_page_preview: true
          format: markdown
          message: |
            Не удалось задеплоить оркестр контейнеров в репозитории: [${{ github.repository }}](https://github.com/${{ github.repository }})
            Детали:
            1. [Ссылка на Workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            2. Запушил: [${{ github.actor }}](https://github.com/${{ github.actor }})
            3. Сообщение коммита: ${{ github.event.commits[0].message }}
            4. [Ссылка на коммит](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
  
  send_success_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          disable_web_page_preview: true
          format: markdown
          message: | 
            Деплой успешно выполнен в репозитории: [${{ github.repository }}](https://github.com/${{ github.repository }})
            Детали:
            1. [Ссылка на Workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            2. Запушил: [${{ github.actor }}](https://github.com/${{ github.actor }})
            3. Сообщение коммита: ${{ github.event.commits[0].message }}
            4. [Ссылка на коммит](https://github.com/${{ github.repository }}/commit/${{ github.sha }})